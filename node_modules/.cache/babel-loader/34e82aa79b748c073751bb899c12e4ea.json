{"ast":null,"code":"import axios from 'axios';\nimport { request } from './axios.util';\nconst API_URL = process.env.REACT_APP_API_URL || 'api';\nexport const GET_USER_BY_ACCESSTOKEN_URL = `${API_URL}/auth/get-user`;\nexport const LOGIN_URL = `${API_URL}/auth/login`;\nexport const REGISTER_URL = `${API_URL}/auth/register`;\nexport const REQUEST_PASSWORD_URL = `${API_URL}/auth/forgot-password`; // Server should return AuthModel\n\nexport async function login(usuario, password) {\n  const resp = await request().post('/auth/login', {\n    usuario,\n    password\n  });\n  console.log(resp);\n  return resp;\n} // Server should return AuthModel\n\nexport function register(email, firstname, lastname, password) {\n  return axios.post(REGISTER_URL, {\n    email,\n    firstname,\n    lastname,\n    password\n  });\n} // Server should return object => { result: boolean } (Is Email in DB)\n\nexport function requestPassword(email) {\n  return axios.post(REQUEST_PASSWORD_URL, {\n    email\n  });\n}\nexport function getUserByToken() {\n  // Authorization head should be fulfilled in interceptor.\n  // Check common redux folder => setupAxios\n  return axios.get(GET_USER_BY_ACCESSTOKEN_URL);\n}","map":{"version":3,"sources":["/Users/joseluis/Desarrollos/Template/MetronicReact1/src/app/modules/auth/redux/AuthCRUD.ts"],"names":["axios","request","API_URL","process","env","REACT_APP_API_URL","GET_USER_BY_ACCESSTOKEN_URL","LOGIN_URL","REGISTER_URL","REQUEST_PASSWORD_URL","login","usuario","password","resp","post","console","log","register","email","firstname","lastname","requestPassword","getUserByToken","get"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAAQC,OAAR,QAAsB,cAAtB;AAEA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAAZ,IAAiC,KAAjD;AAEA,OAAO,MAAMC,2BAA2B,GAAI,GAAEJ,OAAQ,gBAA/C;AACP,OAAO,MAAMK,SAAS,GAAI,GAAEL,OAAQ,aAA7B;AACP,OAAO,MAAMM,YAAY,GAAI,GAAEN,OAAQ,gBAAhC;AACP,OAAO,MAAMO,oBAAoB,GAAI,GAAEP,OAAQ,uBAAxC,C,CAEP;;AACA,OAAO,eAAeQ,KAAf,CAAqBC,OAArB,EAAsCC,QAAtC,EAAwD;AAC7D,QAAMC,IAAI,GAAG,MAAMZ,OAAO,GAAGa,IAAV,CAAe,aAAf,EAA8B;AAACH,IAAAA,OAAD;AAAUC,IAAAA;AAAV,GAA9B,CAAnB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,SAAOA,IAAP;AACD,C,CAED;;AACA,OAAO,SAASI,QAAT,CAAkBC,KAAlB,EAAiCC,SAAjC,EAAoDC,QAApD,EAAsER,QAAtE,EAAwF;AAC7F,SAAOZ,KAAK,CAACc,IAAN,CAAsBN,YAAtB,EAAoC;AACzCU,IAAAA,KADyC;AAEzCC,IAAAA,SAFyC;AAGzCC,IAAAA,QAHyC;AAIzCR,IAAAA;AAJyC,GAApC,CAAP;AAMD,C,CAED;;AACA,OAAO,SAASS,eAAT,CAAyBH,KAAzB,EAAwC;AAC7C,SAAOlB,KAAK,CAACc,IAAN,CAA8BL,oBAA9B,EAAoD;AAACS,IAAAA;AAAD,GAApD,CAAP;AACD;AAED,OAAO,SAASI,cAAT,GAA0B;AAC/B;AACA;AACA,SAAOtB,KAAK,CAACuB,GAAN,CAAqBjB,2BAArB,CAAP;AACD","sourcesContent":["import axios from 'axios'\r\nimport {AuthModel} from '../models/AuthModel'\r\nimport {UserModel} from '../models/UserModel'\r\nimport {request} from './axios.util'\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'api'\r\n\r\nexport const GET_USER_BY_ACCESSTOKEN_URL = `${API_URL}/auth/get-user`\r\nexport const LOGIN_URL = `${API_URL}/auth/login`\r\nexport const REGISTER_URL = `${API_URL}/auth/register`\r\nexport const REQUEST_PASSWORD_URL = `${API_URL}/auth/forgot-password`\r\n\r\n// Server should return AuthModel\r\nexport async function login(usuario: string, password: string) {\r\n  const resp = await request().post('/auth/login', {usuario, password})\r\n  console.log(resp)\r\n  return resp\r\n}\r\n\r\n// Server should return AuthModel\r\nexport function register(email: string, firstname: string, lastname: string, password: string) {\r\n  return axios.post<AuthModel>(REGISTER_URL, {\r\n    email,\r\n    firstname,\r\n    lastname,\r\n    password,\r\n  })\r\n}\r\n\r\n// Server should return object => { result: boolean } (Is Email in DB)\r\nexport function requestPassword(email: string) {\r\n  return axios.post<{result: boolean}>(REQUEST_PASSWORD_URL, {email})\r\n}\r\n\r\nexport function getUserByToken() {\r\n  // Authorization head should be fulfilled in interceptor.\r\n  // Check common redux folder => setupAxios\r\n  return axios.get<UserModel>(GET_USER_BY_ACCESSTOKEN_URL)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}