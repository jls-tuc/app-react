{"ast":null,"code":"var _jsxFileName = \"/Users/joseluis/Desarrollos/Template/MetronicReact1/src/_metronic/partials/widgets/mixed/MixedWidget2.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport ApexCharts from 'apexcharts';\nimport { KTSVG } from '../../../helpers';\nimport { getCSSVariableValue } from '../../../assets/ts/_utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MixedWidget2 = ({\n  className,\n  chartColor,\n  chartHeight,\n  strokeColor\n}) => {\n  _s();\n\n  const chartRef = useRef(null);\n  const dashState = useSelector(state => state.dashBoard);\n  const {\n    modulos\n  } = dashState;\n  useEffect(() => {\n    if (!chartRef.current) {\n      return;\n    }\n\n    const chart = new ApexCharts(chartRef.current, chartOptions(chartHeight, chartColor, strokeColor));\n\n    if (chart) {\n      chart.render();\n    }\n\n    return () => {\n      if (chart) {\n        chart.destroy();\n      }\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [chartRef]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `card ${className}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `card-header border-0 py-5 bg-${chartColor}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"card-title fw-bolder text-white\",\n        children: \"Aplicaciones\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-toolbar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body p-0\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-p mt-n20 position-relative mixed-widget-2-chart card-rounded-bottom\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row g-0\",\n          children: modulos.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col bg-light-warning px-6 py-8 rounded-2 me-7 mb-7\",\n            children: [/*#__PURE__*/_jsxDEV(KTSVG, {\n              path: \"/media/icons/duotune/general/gen032.svg\",\n              className: \"svg-icon-3x svg-icon-warning d-block my-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              className: \"text-warning fw-bold fs-6\",\n              children: item.nombre\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MixedWidget2, \"RLHPg9oz430D4o3haBqkru1ClFw=\", false, function () {\n  return [useSelector];\n});\n\n_c = MixedWidget2;\n\nconst chartOptions = (chartHeight, chartColor, strokeColor) => {\n  const labelColor = getCSSVariableValue('--bs-gray-500');\n  const borderColor = getCSSVariableValue('--bs-gray-200');\n  const color = getCSSVariableValue('--bs-' + chartColor);\n  return {\n    series: [{\n      name: 'Net Profit',\n      data: [30, 45, 32, 70, 40, 40, 40]\n    }],\n    chart: {\n      fontFamily: 'inherit',\n      type: 'area',\n      height: chartHeight,\n      toolbar: {\n        show: false\n      },\n      zoom: {\n        enabled: false\n      },\n      sparkline: {\n        enabled: true\n      },\n      dropShadow: {\n        enabled: true,\n        enabledOnSeries: undefined,\n        top: 5,\n        left: 0,\n        blur: 3,\n        color: strokeColor,\n        opacity: 0.5\n      }\n    },\n    plotOptions: {},\n    legend: {\n      show: false\n    },\n    dataLabels: {\n      enabled: false\n    },\n    fill: {\n      type: 'solid',\n      opacity: 0\n    },\n    stroke: {\n      curve: 'smooth',\n      show: true,\n      width: 3,\n      colors: [strokeColor]\n    },\n    xaxis: {\n      categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug'],\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      },\n      labels: {\n        show: false,\n        style: {\n          colors: labelColor,\n          fontSize: '12px'\n        }\n      },\n      crosshairs: {\n        show: false,\n        position: 'front',\n        stroke: {\n          color: borderColor,\n          width: 1,\n          dashArray: 3\n        }\n      }\n    },\n    yaxis: {\n      min: 0,\n      max: 80,\n      labels: {\n        show: false,\n        style: {\n          colors: labelColor,\n          fontSize: '12px'\n        }\n      }\n    },\n    states: {\n      normal: {\n        filter: {\n          type: 'none',\n          value: 0\n        }\n      },\n      hover: {\n        filter: {\n          type: 'none',\n          value: 0\n        }\n      },\n      active: {\n        allowMultipleDataPointsSelection: false,\n        filter: {\n          type: 'none',\n          value: 0\n        }\n      }\n    },\n    tooltip: {\n      style: {\n        fontSize: '12px'\n      },\n      y: {\n        formatter: function (val) {\n          return '$' + val + ' thousands';\n        }\n      },\n      marker: {\n        show: false\n      }\n    },\n    colors: ['transparent'],\n    markers: {\n      colors: [color],\n      strokeColors: [strokeColor],\n      strokeWidth: 3\n    }\n  };\n};\n\nexport { MixedWidget2 };\n\nfunction dispatch(arg0) {\n  throw new Error('Function not implemented.');\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"MixedWidget2\");","map":{"version":3,"sources":["/Users/joseluis/Desarrollos/Template/MetronicReact1/src/_metronic/partials/widgets/mixed/MixedWidget2.tsx"],"names":["React","useEffect","useRef","useSelector","ApexCharts","KTSVG","getCSSVariableValue","MixedWidget2","className","chartColor","chartHeight","strokeColor","chartRef","dashState","state","dashBoard","modulos","current","chart","chartOptions","render","destroy","map","item","nombre","labelColor","borderColor","color","series","name","data","fontFamily","type","height","toolbar","show","zoom","enabled","sparkline","dropShadow","enabledOnSeries","undefined","top","left","blur","opacity","plotOptions","legend","dataLabels","fill","stroke","curve","width","colors","xaxis","categories","axisBorder","axisTicks","labels","style","fontSize","crosshairs","position","dashArray","yaxis","min","max","states","normal","filter","value","hover","active","allowMultipleDataPointsSelection","tooltip","y","formatter","val","marker","markers","strokeColors","strokeWidth","dispatch","arg0","Error"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef} from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport ApexCharts, {ApexOptions} from 'apexcharts'\r\nimport {KTSVG} from '../../../helpers'\r\nimport {getCSSVariableValue} from '../../../assets/ts/_utils'\r\nimport {ISTATE} from '../../../interface/reduxState.interface'\r\nimport {getOrg} from '../../../services/DashBoardServices'\r\nimport {DashAction} from '../../../../app/modules/auth/actions/DashActions'\r\nimport {IMENU} from '../../../../../.history/src/app/modules/auth/models/DashModel_20211109120343'\r\n\r\ntype Props = {\r\n  className: string\r\n  chartColor: string\r\n  strokeColor: string\r\n  chartHeight: string\r\n}\r\n\r\nconst MixedWidget2: React.FC<Props> = ({className, chartColor, chartHeight, strokeColor}) => {\r\n  const chartRef = useRef<HTMLDivElement | null>(null)\r\n\r\n  const dashState: any = useSelector((state: ISTATE) => state.dashBoard)\r\n  const {modulos} = dashState\r\n\r\n  useEffect(() => {\r\n    if (!chartRef.current) {\r\n      return\r\n    }\r\n\r\n    const chart = new ApexCharts(\r\n      chartRef.current,\r\n      chartOptions(chartHeight, chartColor, strokeColor)\r\n    )\r\n    if (chart) {\r\n      chart.render()\r\n    }\r\n\r\n    return () => {\r\n      if (chart) {\r\n        chart.destroy()\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [chartRef])\r\n\r\n  return (\r\n    <div className={`card ${className}`}>\r\n      {/* begin::Header */}\r\n      <div className={`card-header border-0 py-5 bg-${chartColor}`}>\r\n        <h3 className='card-title fw-bolder text-white'>Aplicaciones</h3>\r\n        <div className='card-toolbar'>\r\n          {/* <button\r\n            type='button'\r\n            className='btn btn-sm btn-icon btn-color-white btn-active-white btn-active-color- border-0 me-n3'\r\n            data-kt-menu-trigger='click'\r\n            data-kt-menu-placement='bottom-end'\r\n            data-kt-menu-flip='top-end'\r\n          >\r\n            <KTSVG path='/media/icons/duotune/general/gen024.svg' className='svg-icon-2' />\r\n          </button>\r\n          <Dropdown1 />\r\n          */}\r\n        </div>\r\n      </div>\r\n      {/* end::Header */}\r\n      {/* begin::Body */}\r\n      <div className='card-body p-0'>\r\n        {/* begin::Chart */}\r\n        {/* <div\r\n          ref={chartRef}\r\n          className={`mixed-widget-2-chart card-rounded-bottom bg-${chartColor}`}\r\n        ></div> */}\r\n        {/* end::Chart */}\r\n        {/* begin::Stats */}\r\n        <div className='card-p mt-n20 position-relative mixed-widget-2-chart card-rounded-bottom'>\r\n          {/* begin::Row */}\r\n          <div className='row g-0'>\r\n            {/* begin::Col */}\r\n\r\n            {modulos.map((item: IMENU) => (\r\n              <div className='col bg-light-warning px-6 py-8 rounded-2 me-7 mb-7'>\r\n                <KTSVG\r\n                  path='/media/icons/duotune/general/gen032.svg'\r\n                  className='svg-icon-3x svg-icon-warning d-block my-2'\r\n                />\r\n                <a href='#' className='text-warning fw-bold fs-6'>\r\n                  {item.nombre}\r\n                </a>\r\n              </div>\r\n            ))}\r\n\r\n            {/* end::Col */}\r\n          </div>\r\n          {/* end::Row */}\r\n        </div>\r\n        {/* end::Stats */}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst chartOptions = (\r\n  chartHeight: string,\r\n  chartColor: string,\r\n  strokeColor: string\r\n): ApexOptions => {\r\n  const labelColor = getCSSVariableValue('--bs-gray-500')\r\n  const borderColor = getCSSVariableValue('--bs-gray-200')\r\n  const color = getCSSVariableValue('--bs-' + chartColor)\r\n\r\n  return {\r\n    series: [\r\n      {\r\n        name: 'Net Profit',\r\n        data: [30, 45, 32, 70, 40, 40, 40],\r\n      },\r\n    ],\r\n    chart: {\r\n      fontFamily: 'inherit',\r\n      type: 'area',\r\n      height: chartHeight,\r\n      toolbar: {\r\n        show: false,\r\n      },\r\n      zoom: {\r\n        enabled: false,\r\n      },\r\n      sparkline: {\r\n        enabled: true,\r\n      },\r\n      dropShadow: {\r\n        enabled: true,\r\n        enabledOnSeries: undefined,\r\n        top: 5,\r\n        left: 0,\r\n        blur: 3,\r\n        color: strokeColor,\r\n        opacity: 0.5,\r\n      },\r\n    },\r\n    plotOptions: {},\r\n    legend: {\r\n      show: false,\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    fill: {\r\n      type: 'solid',\r\n      opacity: 0,\r\n    },\r\n    stroke: {\r\n      curve: 'smooth',\r\n      show: true,\r\n      width: 3,\r\n      colors: [strokeColor],\r\n    },\r\n    xaxis: {\r\n      categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug'],\r\n      axisBorder: {\r\n        show: false,\r\n      },\r\n      axisTicks: {\r\n        show: false,\r\n      },\r\n      labels: {\r\n        show: false,\r\n        style: {\r\n          colors: labelColor,\r\n          fontSize: '12px',\r\n        },\r\n      },\r\n      crosshairs: {\r\n        show: false,\r\n        position: 'front',\r\n        stroke: {\r\n          color: borderColor,\r\n          width: 1,\r\n          dashArray: 3,\r\n        },\r\n      },\r\n    },\r\n    yaxis: {\r\n      min: 0,\r\n      max: 80,\r\n      labels: {\r\n        show: false,\r\n        style: {\r\n          colors: labelColor,\r\n          fontSize: '12px',\r\n        },\r\n      },\r\n    },\r\n    states: {\r\n      normal: {\r\n        filter: {\r\n          type: 'none',\r\n          value: 0,\r\n        },\r\n      },\r\n      hover: {\r\n        filter: {\r\n          type: 'none',\r\n          value: 0,\r\n        },\r\n      },\r\n      active: {\r\n        allowMultipleDataPointsSelection: false,\r\n        filter: {\r\n          type: 'none',\r\n          value: 0,\r\n        },\r\n      },\r\n    },\r\n    tooltip: {\r\n      style: {\r\n        fontSize: '12px',\r\n      },\r\n      y: {\r\n        formatter: function (val) {\r\n          return '$' + val + ' thousands'\r\n        },\r\n      },\r\n      marker: {\r\n        show: false,\r\n      },\r\n    },\r\n    colors: ['transparent'],\r\n    markers: {\r\n      colors: [color],\r\n      strokeColors: [strokeColor],\r\n      strokeWidth: 3,\r\n    },\r\n  }\r\n}\r\n\r\nexport {MixedWidget2}\r\nfunction dispatch(arg0: any) {\r\n  throw new Error('Function not implemented.')\r\n}\r\n"]},"metadata":{},"sourceType":"module"}